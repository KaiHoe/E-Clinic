/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ubt.healthcare.ui;

import com.ubt.healthcare.business.CityService;
import com.ubt.healthcare.business.CountryService;
import com.ubt.healthcare.business.LoadTables;
import com.ubt.healthcare.dto.City;
import com.ubt.healthcare.dto.Country;
import com.ubt.healthcare.ui.util.InputValidation;
import java.awt.event.MouseAdapter;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author F
 */
public class JIFAddCity extends javax.swing.JInternalFrame {

    private CityService cityService;
    private CountryService countryService;
    private City city;
    private InputValidation inputValidation;
    private LoadTables loadTable;
    private JIFAddCountry jifAddCountry;

    /**
     * Creates new form JIFDoctor
     *
     */
    public JIFAddCity() {

        initComponents();
        cityService = new CityService();
        countryService = new CountryService();
        loadTable = new LoadTables();
        inputValidation = new InputValidation();
        jifAddCountry = new JIFAddCountry();
        fillComboBoxCountry();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbClose = new javax.swing.JButton();
        jbSaveCity = new javax.swing.JButton();
        jlCityName = new javax.swing.JLabel();
        jtfCityName = new javax.swing.JTextField();
        jlCountry = new javax.swing.JLabel();
        jlZipCode = new javax.swing.JLabel();
        jtfZipCode = new javax.swing.JTextField();
        jcbCountry = new javax.swing.JComboBox<>();
        jbAddCountry = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Add City Screen");
        setToolTipText("");
        setName(""); // NOI18N
        setVisible(true);

        jbClose.setText("Close");
        jbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });

        jbSaveCity.setText("Save");

        jlCityName.setText("City Name");

        jlCountry.setText("Country");

        jlZipCode.setText("Zip Code");

        jbAddCountry.setText("Add Country");
        jbAddCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddCountryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbSaveCity, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbClose, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jbAddCountry)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCityName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCountry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlZipCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCityName)
                    .addComponent(jcbCountry)
                    .addComponent(jtfZipCode)
                    .addComponent(jbAddCountry))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveCity)
                    .addComponent(jbClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAddCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddCountryActionPerformed
        jifAddCountry.show();
    }//GEN-LAST:event_jbAddCountryActionPerformed

    private void jbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCloseActionPerformed
        this.dispose();
        jtfCityName.setText("");
        jtfZipCode.setText("");
    }//GEN-LAST:event_jbCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAddCountry;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbSaveCity;
    private javax.swing.JComboBox<String> jcbCountry;
    private javax.swing.JLabel jlCityName;
    private javax.swing.JLabel jlCountry;
    private javax.swing.JLabel jlZipCode;
    private javax.swing.JTextField jtfCityName;
    private javax.swing.JTextField jtfZipCode;
    // End of variables declaration//GEN-END:variables

    public void fillComboBoxCountry() {
        List<Object> obj = loadTable.fillComboBoxCountry();
        jcbCountry.removeAllItems();
        obj.forEach((o) -> {
            jcbCountry.addItem(((Country) o).getCountryName());
        });
    }

    public void saveNewCountryInternalPaneListener() {
        String countryMsg = jifAddCountry.saveNewCountryInternalPaneListener();
        if ("Save".equals(countryMsg)) {
            JOptionPane.showMessageDialog(rootPane, "Country is Saved");
            fillComboBoxCountry();
        } else if ("Exist".equals(countryMsg)) {
            JOptionPane.showMessageDialog(rootPane, "Country exists");
        } else {
            JOptionPane.showMessageDialog(rootPane, countryMsg);

        }

    }

    public void closeSaveNewCountrInternlaPaneListener() {
        jifAddCountry.closeSaveNewCountrInternlaPaneListener();
        fillComboBoxCountry();
    }

    public String saveNewCityInternalPaneListener() {
        String cityName = jtfCityName.getText();
        String zipCode = jtfZipCode.getText();
        String countryName = jcbCountry.getSelectedItem().toString();
        Country country = countryService.findTheCountry(countryName);

        if (!("Valid".equals(inputValidation.validateCityName(cityName)))) {
            return inputValidation.validateCityName(cityName);
        } else if (!("Valid".equals(inputValidation.validateZipCode(zipCode)))) {
            return inputValidation.validateZipCode(zipCode);
        } else {
            String cityMsg = cityService.checkIfCityExists(cityName);
            if ("Save".equals(cityMsg)) {
                city = new City();
                city.setCityName(cityName);
                city.setCountryId(country);
                cityService.persistCity(city);
                jtfCityName.setText("");
                jtfZipCode.setText("");
                this.hide();
                return cityMsg;
            } else {
                return cityMsg;
            }
        }
    }

    public void closeSaveNewCityInternlaPaneListener() {
        this.dispose();
        jtfCityName.setText("");
        jtfZipCode.setText("");
    }

    public void addSaveCityAddDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbSaveCity.addMouseListener(e);
    }

    public void addSaveCityEditDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbSaveCity.addMouseListener(e);
    }

    public void addCloseCityEditDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbClose.addMouseListener(e);
    }

    public void addAddCountryInternalFrameMouseAdapter(MouseAdapter e) {
        jbAddCountry.addMouseListener(e);
    }
}
