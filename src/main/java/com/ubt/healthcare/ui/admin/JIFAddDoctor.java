/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ubt.healthcare.ui.admin;

import com.toedter.calendar.JDateChooser;
import com.ubt.healthcare.business.DoctorService;
import com.ubt.healthcare.business.LoadTables;
import com.ubt.healthcare.dto.City;
import com.ubt.healthcare.dto.Country;
import com.ubt.healthcare.dto.Doctor;
import com.ubt.healthcare.dto.Education;
import com.ubt.healthcare.dto.EducationProgram;
import com.ubt.healthcare.dto.EducationType;
import com.ubt.healthcare.dto.Gender;
import com.ubt.healthcare.dto.MartialStatus;
import com.ubt.healthcare.dto.PersonEducation;
import com.ubt.healthcare.dto.Religion;
import com.ubt.healthcare.ui.JIFAddCity;
import com.ubt.healthcare.ui.admin.model.DoctorTableModelEducation;
import com.ubt.healthcare.ui.util.InputValidation;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author F
 */
public class JIFAddDoctor extends javax.swing.JInternalFrame {

    private DoctorTableModelEducation doctorTableModelEducation;
    private DoctorService doctorService;
    private Doctor doctor;
    private LoadTables loadTable;
    private InputValidation inputValidation;
    private JIFAddCity jifAddCity;
    private HashSet countrySet;

    /**
     * Creates new form JIFDoctor
     *
     * @param jifAddCity
     */
    public JIFAddDoctor(JIFAddCity jifAddCity) {

        initComponents();
        doctorTableModelEducation = new DoctorTableModelEducation();
        doctorService = new DoctorService();
        loadTable = new LoadTables();
        inputValidation = new InputValidation();
        this.jifAddCity = jifAddCity;
        countrySet = new HashSet();
        bindTheEducationTableModel();
        fillComboBoxBirthCity();
        fillComboBoxCountry();
        fillComboBoxCity();
        fillComboBoxSex();
        fillComboBoxMartialStatus();
        fillComboBoxEducationType();
        fillComboBoxReligion();

        jspPersonalInformation.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jspPersonalInformation.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        jspEducationDetails.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jspEducationDetails.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        jspEducationDetailsTable.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jspEducationDetailsTable.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpDoctorDetails = new javax.swing.JTabbedPane();
        jspPersonalInformation = new javax.swing.JScrollPane();
        jpPersonalInformation = new javax.swing.JPanel();
        jlFirstName = new javax.swing.JLabel();
        jtfFirstName = new javax.swing.JTextField();
        jlMiddleName = new javax.swing.JLabel();
        jtfMiddleName = new javax.swing.JTextField();
        jlLastName = new javax.swing.JLabel();
        jtfLastName = new javax.swing.JTextField();
        jlPersonalId = new javax.swing.JLabel();
        jtfPersonalId = new javax.swing.JTextField();
        jlSex = new javax.swing.JLabel();
        jlMaritalStatus = new javax.swing.JLabel();
        jtfAddress = new javax.swing.JTextField();
        jlCity = new javax.swing.JLabel();
        jlCountry = new javax.swing.JLabel();
        jlHomePhone = new javax.swing.JLabel();
        jtfHomePhone = new javax.swing.JTextField();
        jlWorkPhone = new javax.swing.JLabel();
        jtfWorkPhone = new javax.swing.JTextField();
        jlMobilePhone = new javax.swing.JLabel();
        jtfMobilePhone = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jlPassword = new javax.swing.JLabel();
        jlDateOfBirth = new javax.swing.JLabel();
        jdchDateOfBirth = new com.toedter.calendar.JDateChooser();
        jlBirthPlace1 = new javax.swing.JLabel();
        jcbBirthPlace = new javax.swing.JComboBox<>();
        jlContactInformation = new javax.swing.JLabel();
        jlAddressInformation = new javax.swing.JLabel();
        jcbCountry = new javax.swing.JComboBox<>();
        jcbCity = new javax.swing.JComboBox<>();
        jlAddress2 = new javax.swing.JLabel();
        jlBuildingNumber = new javax.swing.JLabel();
        jtfBuildingNumber = new javax.swing.JTextField();
        jpfPassword = new javax.swing.JPasswordField();
        jcbGender = new javax.swing.JComboBox<>();
        jcbMaritalStatus = new javax.swing.JComboBox<>();
        jcbReligion = new javax.swing.JComboBox<>();
        jlReligion = new javax.swing.JLabel();
        jlPersonalInformation = new javax.swing.JLabel();
        jlEmail = new javax.swing.JLabel();
        jbAddCity = new javax.swing.JButton();
        jspEducationDetails = new javax.swing.JScrollPane();
        jpEducationDetails = new javax.swing.JPanel();
        jlProgramType = new javax.swing.JLabel();
        jtfProgram = new javax.swing.JTextField();
        jlEducationType = new javax.swing.JLabel();
        jspEducationDetailsTable = new javax.swing.JScrollPane();
        jtEducationDetails = new javax.swing.JTable();
        jlInstitution = new javax.swing.JLabel();
        jtfInstitution = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jbSaveEducation = new javax.swing.JButton();
        jbDeleteEducation = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jdchDateEnd = new com.toedter.calendar.JDateChooser();
        jdchDateStart = new com.toedter.calendar.JDateChooser();
        jcbEducationType = new javax.swing.JComboBox<>();
        jbClose = new javax.swing.JButton();
        jbSaveDoctor = new javax.swing.JButton();

        setMaximizable(true);
        setResizable(true);
        setTitle("Add Doctor Screen");
        setToolTipText("");
        setName(""); // NOI18N
        setVisible(true);

        jlFirstName.setForeground(new java.awt.Color(0, 153, 204));
        jlFirstName.setText("First name :");

        jlMiddleName.setForeground(new java.awt.Color(0, 153, 204));
        jlMiddleName.setText("Middle name :");

        jtfMiddleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMiddleNameActionPerformed(evt);
            }
        });

        jlLastName.setForeground(new java.awt.Color(0, 153, 204));
        jlLastName.setText("Last Name :");

        jlPersonalId.setForeground(new java.awt.Color(0, 153, 204));
        jlPersonalId.setText("Personal ID :");

        jlSex.setForeground(new java.awt.Color(0, 153, 204));
        jlSex.setText("Sex :");

        jlMaritalStatus.setForeground(new java.awt.Color(0, 153, 204));
        jlMaritalStatus.setText("Marital Status :");

        jlCity.setForeground(new java.awt.Color(0, 153, 204));
        jlCity.setText("City :");

        jlCountry.setForeground(new java.awt.Color(0, 153, 204));
        jlCountry.setText("   Country :");

        jlHomePhone.setForeground(new java.awt.Color(0, 153, 204));
        jlHomePhone.setText("Home Phone :");

        jlWorkPhone.setForeground(new java.awt.Color(0, 153, 204));
        jlWorkPhone.setText(" Work Phone :");

        jlMobilePhone.setForeground(new java.awt.Color(0, 153, 204));
        jlMobilePhone.setText("Mobile Phone :");

        jlPassword.setForeground(new java.awt.Color(0, 153, 204));
        jlPassword.setText("Password :");

        jlDateOfBirth.setForeground(new java.awt.Color(0, 153, 204));
        jlDateOfBirth.setText("    Date of Birth :");

        jlBirthPlace1.setForeground(new java.awt.Color(0, 153, 204));
        jlBirthPlace1.setText("  Birth Place ");

        jlContactInformation.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jlContactInformation.setForeground(new java.awt.Color(102, 102, 255));
        jlContactInformation.setText("Contact Information");

        jlAddressInformation.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jlAddressInformation.setForeground(new java.awt.Color(102, 102, 255));
        jlAddressInformation.setText("      Address Information ");

        jcbCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCountryActionPerformed(evt);
            }
        });

        jlAddress2.setForeground(new java.awt.Color(0, 153, 204));
        jlAddress2.setText("Address  :");

        jlBuildingNumber.setForeground(new java.awt.Color(0, 153, 204));
        jlBuildingNumber.setText("Building Number :");

        jlReligion.setForeground(new java.awt.Color(0, 153, 204));
        jlReligion.setText("Religion");

        jlPersonalInformation.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jlPersonalInformation.setForeground(new java.awt.Color(102, 102, 255));
        jlPersonalInformation.setText("      Personal Information ");

        jlEmail.setForeground(new java.awt.Color(0, 153, 204));
        jlEmail.setText("Email :");

        jbAddCity.setText("Add City");

        javax.swing.GroupLayout jpPersonalInformationLayout = new javax.swing.GroupLayout(jpPersonalInformation);
        jpPersonalInformation.setLayout(jpPersonalInformationLayout);
        jpPersonalInformationLayout.setHorizontalGroup(
            jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlBirthPlace1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlReligion, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpPersonalInformationLayout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                                .addComponent(jlSex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jcbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                                .addComponent(jlLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpPersonalInformationLayout.createSequentialGroup()
                                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jlMaritalStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbMaritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jdchDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jcbBirthPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jcbReligion, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpPersonalInformationLayout.createSequentialGroup()
                                        .addComponent(jlFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(262, 262, 262))))
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                        .addComponent(jlDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(67, 67, 67))
                                    .addComponent(jlMiddleName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addComponent(jlPersonalId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfPersonalId, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)))
                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlMobilePhone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpPersonalInformationLayout.createSequentialGroup()
                                        .addComponent(jlWorkPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(3, 3, 3))
                                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jlHomePhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jlEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfMobilePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfWorkPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfHomePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPersonalInformationLayout.createSequentialGroup()
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPersonalInformationLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPersonalInformationLayout.createSequentialGroup()
                                                .addComponent(jlCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPersonalInformationLayout.createSequentialGroup()
                                                .addComponent(jlCity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(33, 33, 33))))
                                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(jlAddress2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jlBuildingNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfBuildingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jlContactInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(43, 43, 43)))
                .addGap(18, 18, 18)
                .addComponent(jbAddCity, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(381, 381, 381))
            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jlPersonalInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(263, 263, 263)
                .addComponent(jlAddressInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(371, 371, 371))
        );

        jpPersonalInformationLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcbCity, jcbCountry, jtfAddress, jtfBuildingNumber, jtfEmail, jtfHomePhone, jtfMobilePhone, jtfWorkPhone});

        jpPersonalInformationLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcbBirthPlace, jcbGender, jcbMaritalStatus, jcbReligion, jdchDateOfBirth, jpfPassword, jtfFirstName, jtfLastName, jtfMiddleName, jtfPersonalId});

        jpPersonalInformationLayout.setVerticalGroup(
            jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlAddressInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlPersonalInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfPersonalId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlPersonalId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlMiddleName, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlSex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlMaritalStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbMaritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jlDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jdchDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addComponent(jlBirthPlace1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jlReligion, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                                .addGap(108, 108, 108))
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addComponent(jcbBirthPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jcbReligion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlAddress2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCity, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbAddCity))
                        .addGap(16, 16, 16)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jtfBuildingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlContactInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jlBuildingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jlMobilePhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jtfMobilePhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jlWorkPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jtfWorkPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPersonalInformationLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jlHomePhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jtfHomePhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfEmail)
                            .addComponent(jlEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(163, 163, 163))
        );

        jspPersonalInformation.setViewportView(jpPersonalInformation);

        jtpDoctorDetails.addTab("Personal Information", jspPersonalInformation);

        jlProgramType.setText("Program");

        jlEducationType.setText("Education Type");

        jtEducationDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jspEducationDetailsTable.setViewportView(jtEducationDetails);

        jlInstitution.setText("Institution");

        jLabel7.setText("Date Start");

        jbSaveEducation.setText("Save");

        jbDeleteEducation.setText("Delete");

        jbCancel.setText("Cancel");

        jLabel8.setText("Date End");

        javax.swing.GroupLayout jpEducationDetailsLayout = new javax.swing.GroupLayout(jpEducationDetails);
        jpEducationDetails.setLayout(jpEducationDetailsLayout);
        jpEducationDetailsLayout.setHorizontalGroup(
            jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlProgramType)
                            .addComponent(jtfProgram))
                        .addGap(39, 39, 39)
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                                .addComponent(jlEducationType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                                .addComponent(jcbEducationType, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlInstitution)
                            .addComponent(jtfInstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jdchDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addComponent(jdchDateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27))
                    .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jspEducationDetailsTable, javax.swing.GroupLayout.DEFAULT_SIZE, 1153, Short.MAX_VALUE))
                    .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(jbSaveEducation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbDeleteEducation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(366, 366, 366)))
                .addGap(22, 22, 22))
        );
        jpEducationDetailsLayout.setVerticalGroup(
            jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEducationDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspEducationDetailsTable, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpEducationDetailsLayout.createSequentialGroup()
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jlInstitution))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfInstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdchDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdchDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpEducationDetailsLayout.createSequentialGroup()
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlProgramType)
                            .addComponent(jlEducationType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbEducationType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 200, Short.MAX_VALUE)
                .addGroup(jpEducationDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveEducation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbDeleteEducation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );

        jspEducationDetails.setViewportView(jpEducationDetails);

        jtpDoctorDetails.addTab("Education Details", jspEducationDetails);

        jbClose.setText("Close");

        jbSaveDoctor.setText("Save");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jtpDoctorDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jbSaveDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(300, 300, 300)
                        .addComponent(jbClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtpDoctorDetails)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbSaveDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfMiddleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMiddleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfMiddleNameActionPerformed

    private void jcbCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCountryActionPerformed
        String selectedItem = jcbCountry.getSelectedItem().toString();
        fillComboBoxCity(selectedItem);
    }//GEN-LAST:event_jcbCountryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jbAddCity;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbDeleteEducation;
    private javax.swing.JButton jbSaveDoctor;
    private javax.swing.JButton jbSaveEducation;
    private javax.swing.JComboBox<String> jcbBirthPlace;
    private javax.swing.JComboBox<String> jcbCity;
    private javax.swing.JComboBox<String> jcbCountry;
    private javax.swing.JComboBox<String> jcbEducationType;
    private javax.swing.JComboBox<String> jcbGender;
    private javax.swing.JComboBox<String> jcbMaritalStatus;
    private javax.swing.JComboBox<String> jcbReligion;
    private com.toedter.calendar.JDateChooser jdchDateEnd;
    private com.toedter.calendar.JDateChooser jdchDateOfBirth;
    private com.toedter.calendar.JDateChooser jdchDateStart;
    private javax.swing.JLabel jlAddress2;
    private javax.swing.JLabel jlAddressInformation;
    private javax.swing.JLabel jlBirthPlace1;
    private javax.swing.JLabel jlBuildingNumber;
    private javax.swing.JLabel jlCity;
    private javax.swing.JLabel jlContactInformation;
    private javax.swing.JLabel jlCountry;
    private javax.swing.JLabel jlDateOfBirth;
    private javax.swing.JLabel jlEducationType;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlFirstName;
    private javax.swing.JLabel jlHomePhone;
    private javax.swing.JLabel jlInstitution;
    private javax.swing.JLabel jlLastName;
    private javax.swing.JLabel jlMaritalStatus;
    private javax.swing.JLabel jlMiddleName;
    private javax.swing.JLabel jlMobilePhone;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlPersonalId;
    private javax.swing.JLabel jlPersonalInformation;
    private javax.swing.JLabel jlProgramType;
    private javax.swing.JLabel jlReligion;
    private javax.swing.JLabel jlSex;
    private javax.swing.JLabel jlWorkPhone;
    private javax.swing.JPanel jpEducationDetails;
    private javax.swing.JPanel jpPersonalInformation;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JScrollPane jspEducationDetails;
    private javax.swing.JScrollPane jspEducationDetailsTable;
    private javax.swing.JScrollPane jspPersonalInformation;
    private javax.swing.JTable jtEducationDetails;
    private javax.swing.JTextField jtfAddress;
    private javax.swing.JTextField jtfBuildingNumber;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfFirstName;
    private javax.swing.JTextField jtfHomePhone;
    private javax.swing.JTextField jtfInstitution;
    private javax.swing.JTextField jtfLastName;
    private javax.swing.JTextField jtfMiddleName;
    private javax.swing.JTextField jtfMobilePhone;
    private javax.swing.JTextField jtfPersonalId;
    private javax.swing.JTextField jtfProgram;
    private javax.swing.JTextField jtfWorkPhone;
    private javax.swing.JTabbedPane jtpDoctorDetails;
    // End of variables declaration//GEN-END:variables

    public void addCloseAddDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbClose.addMouseListener(e);
    }

    public void addSaveEducationDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbSaveEducation.addMouseListener(e);
    }

    public void addSaveDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbSaveDoctor.addMouseListener(e);
    }

    public void addDeleteEducationDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbDeleteEducation.addMouseListener(e);
    }

    public void addCancleFieldSelectionEducationDoctorInternalFrameMouseAdapter(MouseAdapter e) {
        jbCancel.addMouseListener(e);
    }

    public DoctorService getDoctorService() {
        return doctorService;
    }

    public Doctor getDoctor() {
        return doctor;
    }

    public void setDoctor(Doctor doctor) {
        this.doctor = doctor;
    }

    public JTextField getJtfAddress() {
        return jtfAddress;
    }

    public JTextField getJtfEmail() {
        return jtfEmail;
    }

    public JTextField getJtfFirstName() {
        return jtfFirstName;
    }

    public JTextField getJtfHomePhone() {
        return jtfHomePhone;
    }

    public JTextField getJtfLastName() {
        return jtfLastName;
    }

    public JTextField getJtfMiddleName() {
        return jtfMiddleName;
    }

    public JTextField getJtfMobilePhone() {
        return jtfMobilePhone;
    }

    public JTextField getJtfPersonalId() {
        return jtfPersonalId;
    }

    public JTextField getJtfWorkPhone() {
        return jtfWorkPhone;
    }

    public JComboBox<String> getJcbBirthPlace() {
        return jcbBirthPlace;
    }

    public JComboBox<String> getJcbCity() {
        return jcbCity;
    }

    public JComboBox<String> getJcbCountry() {
        return jcbCountry;
    }

    public JComboBox<String> getJcbGender() {
        return jcbGender;
    }

    public JComboBox<String> getJcbReligion() {
        return jcbReligion;
    }

    public JComboBox<String> getJcbMaritalStatus() {
        return jcbMaritalStatus;
    }

    public JDateChooser getJdchDOB() {
        return jdchDateEnd;
    }

    public JDateChooser getJdchDOB1() {
        return jdchDateStart;
    }

    public JDateChooser getJdchDateOfBirth() {
        return jdchDateOfBirth;
    }

    public JPasswordField getJpfPassword() {
        return jpfPassword;
    }

    public JTextField getJtfBuildingNumber() {
        return jtfBuildingNumber;
    }

    public JTable getJtEducationDetails() {
        return jtEducationDetails;
    }

    public DoctorTableModelEducation getDoctorTableModelEducation() {
        return doctorTableModelEducation;
    }

    public void educationTableRowSelectionListener() {
        final ListSelectionModel selectedModel = jtEducationDetails.getSelectionModel();
        selectedModel.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    return;
                }
                int selectedRow = selectedModel.getAnchorSelectionIndex();
                if (selectedRow > -1) {
                    // get the selected education from jtable which is saved on arrayList
                    //and update the jtfields which they can edit
                    PersonEducation pe = doctorTableModelEducation.getPersonEducation(selectedRow);
                    jdchDateEnd.setDate(pe.getDateEnd());
                    jdchDateStart.setDate(pe.getDateStart());
                    jtfInstitution.setText(pe.getEducationId().getInstitutionName());
                    jcbEducationType.setSelectedIndex(getSelectedEducationType(pe.getEducationId().getEucationTypeId().getEducationName()));// implement combobox model that i can get the index of certain string saved on object personEducation...
                    jtfProgram.setText(pe.getEducationId().getEducationProgramId().getProgramName());
                }
            }
        });
    }

    public void addEducation() {
        // update the arraylist of education with new values from jtfields
        int row = jtEducationDetails.getSelectedRow();
        if (jtfProgram.getText().equals("")) {// change message to english...
            JOptionPane.showMessageDialog(this, "Ju lutem Shkruani Emrin e Programit te studimeve :", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (jtfInstitution.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ju lutem Shkruani emrin e institutit :", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (jdchDateEnd.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Ju lutem Shkruani Daten e Mbarimit :", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (jdchDateStart.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Ju lutem Shkruani Daten e Fillimit :", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (jdchDateStart.getDate().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "Ju lutem Shkruani Daten e Fillimit :", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (jcbEducationType.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "Ju lutem selektoni Llojin e edukimit :", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (jdchDateEnd.getDate().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "Ju lutem Shkruani Daten e Mbarimit :", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!("Valid".equals(inputValidation.validateEducationDateStartEnd(jdchDateStart.getDate(), jdchDateEnd.getDate())))) {
            JOptionPane.showMessageDialog(this, inputValidation.validateEducationDateStartEnd(jdchDateStart.getDate(), jdchDateEnd.getDate()), "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (row == -1) {
                // add new education
                PersonEducation personEducation = new PersonEducation();
                Education education = new Education();
                EducationType educationType = new EducationType();
                EducationProgram educationProgram = new EducationProgram();

                //validate input
                personEducation.setDateEnd(jdchDateEnd.getDate());
                personEducation.setDateStart(jdchDateStart.getDate());
                education.setInstitutionName(jtfInstitution.getText());
                educationType.setEducationName(jcbEducationType.getSelectedItem().toString());
                educationProgram.setProgramName(jtfProgram.getText());

                education.setEducationProgramId(educationProgram);
                education.setEucationTypeId(educationType);
                personEducation.setEducationId(education);

                doctorTableModelEducation.getPersonEducation().add(personEducation);

                JOptionPane.showMessageDialog(this, "E dhëna u ruajt me sukses !");
            } else {
                // edit the current education
                PersonEducation personEducation = doctorTableModelEducation.getPersonEducation(row);

                Education education = new Education();
                EducationType educationType = new EducationType();
                EducationProgram educationProgram = new EducationProgram();

                personEducation.setDateEnd(jdchDateEnd.getDate());
                personEducation.setDateStart(jdchDateStart.getDate());
                education.setInstitutionName(jtfInstitution.getText());
                educationType.setEducationName(jcbEducationType.getSelectedItem().toString());
                educationProgram.setProgramName(jtfProgram.getText());

                education.setEducationProgramId(educationProgram);
                education.setEucationTypeId(educationType);
                personEducation.setEducationId(education);

                doctorTableModelEducation.getPersonEducation().set(row, personEducation);
            }
            clearFields(1);
            fillTheEducationTable();
        }

    }

    public void deleteEducation() {
        // delete the selected row from jtable and arrayList
        try {
            int row = jtEducationDetails.getSelectedRow();
            if (row > -1) {
                Object[] ob = {"Po", "Jo"};
                int i = javax.swing.JOptionPane.showOptionDialog(this, "A dëshironi ta fshini ?", "Fshirja", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
                if (i == 0) {

                    doctorTableModelEducation.remove(row);
                    clearFields(0);
                    fillTheEducationTable();
                    JOptionPane.showMessageDialog(this, "E dhëna është fshir me sukses !");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nuk keni selektuar asgjë për të fshir !");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }

    public void fillComboBoxBirthCity() {
        List<Object> obj = loadTable.fillComboBoxBirthCity();
        for (Object o : obj) {
            jcbBirthPlace.addItem(((City) o).getCityName());
        }
    }

    public void fillComboBoxCountry() {
        List<Object> obj = loadTable.fillComboBoxCountry();
        for (Object o : obj) {
            if (!countrySet.contains(o)) {
                jcbCountry.addItem(((Country) o).getCountryName());
                countrySet.add(o);

            }
        }
    }

    public void fillComboBoxCity() {
        List<Object> obj = loadTable.fillComboBoxBirthCity();
        jcbCity.removeAllItems();
        for (Object o : obj) {
            jcbCity.addItem(((City) o).getCityName());
        }
    }

    public void fillComboBoxCity(String country) {
        List<Object> obj = loadTable.fillComboBoxBirthCity();
        jcbCity.removeAllItems();
        for (Object o : obj) {
            if (((City) o).getCountryId().getCountryName().equals(country)) {
                jcbCity.addItem(((City) o).getCityName());
            }
        }
    }

    public void fillComboBoxSex() {
        List<Object> obj = loadTable.fillComboBoxGender();
        for (Object o : obj) {
            jcbGender.addItem(((Gender) o).getGenderName());
        }
    }

    public void fillComboBoxMartialStatus() {
        List<Object> obj = loadTable.fillComboBoxMartialStatus();
        for (Object o : obj) {
            jcbMaritalStatus.addItem(((MartialStatus) o).getMartialStatusName());
        }
    }

    public void fillComboBoxEducationType() {
        List<Object> obj = loadTable.fillComboBoxEducationType();
        for (Object o : obj) {
            jcbEducationType.addItem(((EducationType) o).getEducationName());
        }
    }

    public void fillComboBoxReligion() {
        List<Object> obj = loadTable.fillComboBoxReligion();
        for (Object o : obj) {
            jcbReligion.addItem(((Religion) o).getName());
        }
    }

    public void clearFields(int i) {
        // clear the fields after savind the Doctor..
        if (i == 1) // if no element on table it throws exception if we try to clear the table...
        {
            jtEducationDetails.clearSelection();
        }

        jdchDateEnd.setDate(null);
        jdchDateStart.setDate(null);
        jtfInstitution.setText("");
        jcbEducationType.setSelectedIndex(-1);
        jtfProgram.setText("");
    }

    private void fillTheEducationTable() {
        doctorTableModelEducation.fireTableDataChanged();

    }

    private void bindTheEducationTableModel() {
        doctorTableModelEducation.add(new ArrayList<>());
        jtEducationDetails.setModel(doctorTableModelEducation);
        fillTheEducationTable();
        educationTableRowSelectionListener();
    }

    public int getSelectedEducationType(String educationType) {
        List<EducationType> fillComboBoxEducationType = (List<EducationType>) (Object) loadTable.fillComboBoxEducationType();
        int i = 0;
        for (EducationType object : fillComboBoxEducationType) {
            if (object.getEducationName().equals(educationType)) {
                return i;
            }
            i++;
        }
        return -1;
    }

    public void addAddNewCityInternalFrameMouseAdapter(MouseAdapter e) {
        jbAddCity.addMouseListener(e);
    }

    public JIFAddCity getjIFAddCity() {
        return jifAddCity;
    }

    public void saveNewCityInternalPaneListener() {
        String cityMsg = jifAddCity.saveNewCityInternalPaneListener();
        if ("Save".equals(cityMsg)) {
            JOptionPane.showMessageDialog(rootPane, "City is Saved");
            fillComboBoxCity();
            fillComboBoxCountry();
        } else if ("Exist".equals(cityMsg)) {
            JOptionPane.showMessageDialog(rootPane, "City exists");
        } else {
            JOptionPane.showMessageDialog(rootPane, cityMsg);

        }
    }

    public void closeSaveNewCityInternlaPaneListener() {
        jifAddCity.closeSaveNewCityInternlaPaneListener();
        fillComboBoxCity();
    }

}
