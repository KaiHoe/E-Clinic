/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ubt.healthcare.ui.clinicManager;

import com.ubt.healthcare.business.DoctorService;
import com.ubt.healthcare.dto.City;
import com.ubt.healthcare.dto.Doctor;
import com.ubt.healthcare.ui.clinicManager.model.DoctorTableModelSelectDoctor;
import com.ubt.healthcare.ui.util.LoadTables;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author F
 */
public class JIFSearchDoctor extends javax.swing.JInternalFrame {

    private DoctorService doctorService;
    private List<Doctor> doctorList;
    private DoctorTableModelSelectDoctor doctorTableModelSelectDoctor;
    private LoadTables loadTable;

    /**
     * Creates new form JIFSearchDoctor
     */
    public JIFSearchDoctor() {
        initComponents();
        doctorService = new DoctorService();
        loadTable = new LoadTables();
        bindTheDoctorSearchTableModel();
        fillComboBoxCity();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlFirstNameSearch = new javax.swing.JLabel();
        jtfFirstNameSearch = new javax.swing.JTextField();
        jtfLastNameSearch = new javax.swing.JTextField();
        jlLastNameSearch = new javax.swing.JLabel();
        jlCitySearch = new javax.swing.JLabel();
        jcbCitySearch = new javax.swing.JComboBox<>();
        jbSearchDoctor = new javax.swing.JButton();
        jspDoctorTable = new javax.swing.JScrollPane();
        jtDoctorListTable = new javax.swing.JTable();
        jbSelectDoctor = new javax.swing.JButton();

        setClosable(true);
        setTitle("Search Doctor");

        jlFirstNameSearch.setText("First Name");

        jtfLastNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfLastNameSearchActionPerformed(evt);
            }
        });

        jlLastNameSearch.setText("Last Name");

        jlCitySearch.setText("City");

        jbSearchDoctor.setText("Search");

        jtDoctorListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspDoctorTable.setViewportView(jtDoctorListTable);

        jbSelectDoctor.setText("Select");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspDoctorTable, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfFirstNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlFirstNameSearch))
                                .addGap(88, 88, 88)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfLastNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlLastNameSearch))
                                .addGap(141, 141, 141)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlCitySearch)
                                    .addComponent(jcbCitySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbSelectDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(145, 145, 145)
                                .addComponent(jbSearchDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)))
                        .addGap(195, 195, 195))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSearchDoctor)
                    .addComponent(jbSelectDoctor))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCitySearch)
                    .addComponent(jlLastNameSearch)
                    .addComponent(jlFirstNameSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCitySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfLastNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFirstNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jspDoctorTable, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfLastNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfLastNameSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfLastNameSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbSearchDoctor;
    private javax.swing.JButton jbSelectDoctor;
    private javax.swing.JComboBox<String> jcbCitySearch;
    private javax.swing.JLabel jlCitySearch;
    private javax.swing.JLabel jlFirstNameSearch;
    private javax.swing.JLabel jlLastNameSearch;
    private javax.swing.JScrollPane jspDoctorTable;
    private javax.swing.JTable jtDoctorListTable;
    private javax.swing.JTextField jtfFirstNameSearch;
    private javax.swing.JTextField jtfLastNameSearch;
    // End of variables declaration//GEN-END:variables

    public void addSearchDoctorPanelMouseAdapter(MouseAdapter e) {
        jbSearchDoctor.addMouseListener(e);
    }

    public void addSelectDoctorPanelMouseAdapter(MouseAdapter e) {
        jbSelectDoctor.addMouseListener(e);
    }

// load Doctor Table 
    public void loadDoctorListTable(String name, String surname, String city) {
        try {
            doctorList = doctorService.findDoctorByParametersLambda(name, surname, city);
            if (doctorList.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "No Doctor found");
            } else {
                doctorTableModelSelectDoctor = new DoctorTableModelSelectDoctor(doctorList);
                jtDoctorListTable.setModel(doctorTableModelSelectDoctor);
                doctorTableModelSelectDoctor.fireTableDataChanged();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error detected while connecting on database");

        }
    }

    // method which searches for Doctor 
    public void searchDoctorInternalPane() {
        String nameOfDctor = jtfFirstNameSearch.getText();
        String surnameOfDctor = jtfLastNameSearch.getText();
        String cityOfDoctor = jcbCitySearch.getSelectedIndex() < 0 ? "" : jcbCitySearch.getSelectedItem().toString();

        if (nameOfDctor.trim().length() == 0 && surnameOfDctor.trim().length() == 0 && cityOfDoctor.trim().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Please fill the fields to find the Doctor you are looking for");
        } else {

            loadDoctorListTable(nameOfDctor, surnameOfDctor, cityOfDoctor);

        }
    }

    public void fillComboBoxCity() {
        try {
            List<Object> obj = loadTable.fillComboBoxBirthCity();
            jcbCitySearch.addItem("");
            for (Object o : obj) {
                jcbCitySearch.addItem(((City) o).getCityName());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error detected while connecting on database");

        }
    }

    //create table with empty rows and add the listener in constructor
    public void bindTheDoctorSearchTableModel() {
        doctorTableModelSelectDoctor = new DoctorTableModelSelectDoctor(new ArrayList<>());
        doctorTableModelSelectDoctor.add(new ArrayList<>());
        jtDoctorListTable.setModel(doctorTableModelSelectDoctor);
        doctorTableModelSelectDoctor.fireTableDataChanged();
    }

    public void clearTheFields()
    {
        jtfFirstNameSearch.setText("");
        jtfLastNameSearch.setText("");
        jcbCitySearch.setSelectedIndex(0);
    }
    public JTable getJtDoctorListTable() {
        return jtDoctorListTable;
    }

}
